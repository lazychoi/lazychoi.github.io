---
title: "10장 Topology Sort p290"
date: 2022-11-01
---

**위상 정렬(Topology Sort)**이란 방향 그래프의 모든 노드를 방향성에 거스르지 않도록 순서대로 나열하는 것이다. 예를 들어 선수과목을 고려해서 과목을 순서대로 나열하는 것이다.

이를 위해 진입차수를 사용한다. **진입차수(Indegree)**란 특정한 노드로 들어오는 간선의 개수를 말한다. 진입차수가 0인 노드, 즉 맨 앞 노드에서 출발해서 연결된 노드로 들어가는 간선을 제거한다. 그러면 연결된 노드의 진입차수가 0이 된다. 이런 식으로 마지막 노드까지 반복한다. 이때 모든 원소를 방문하기 전에 큐가 빈다면 사이클이 존재한다고 볼 수 있다. 위상 정렬은 순서가 있기 때문에 사이클이 존재하는 경우는 기본적으로 고려하지 않는다.

## 알고리즘

1. 진입차수가 0인 노드를 큐에 넣는다.
2. 큐가 빌 때까지 다음을 반복한다.
    1. 큐에서 원소를 꺼내 해당 노드에서 출발하는 간선을 그래프에서 제거
    2. 새로 진입차수가 0이 된 노드를 큐에 넣는다.

## 구현

1. deque 라이브러리 임포트
2. 변수 선언
    1. 노드, 간선 개수 입력
    2. 진입차수 리스트 변수: 인덱스 = 노드 번호, 값 = 진입 차수
    3. 그래프 변수: [[노드, 노드], ...]
    4. 노드 순서를 담을 변수 result 
3. 큐 변수 선언
4. 진입차수가 0인 노드를 큐에 담는다.
5. 큐가 빌 때까지 다음 반복
    1. 큐의 첫 번째 원소를 꺼낸다.
    2. result 변수에 넣는다.
    3. 첫 번째 원소와 연결된 노드를 돌며
        1. 연결된 노드의 진입차수 - 1
        2. 진입차수가 0이면 큐에 추가
6. result 출력

```{mermaid}
flowchart LR
    1-->2
    1-->5
    2-->3-->4-->7
    2-->6-->4
    5-->6
```


```{python}
from collections import deque

v, e = 7, 8
indegree = [0, 0, 1, 1, 2, 1, 2, 1]
graph = [[], [2, 5], [3, 6], [4], [7], [6], [4], []]

result = []
q = deque()

for i in range(1, len(indegree)):
    if indegree[i] == 0:
        q.append(i) # 노드(인덱스)를 큐에 넣기

while q:
    now = q.popleft()         # 첫 번째 노드(인덱스) 꺼내기
    result.append(now)        # 꺼낸 첫 번째 노드를 result에 추가
    for i in graph[now]:      # 연결된 노드 돌며 
        indegree[i] -= 1      # 진입차수 하나 줄이고
        if indegree[i] == 0:  # 진입차수가 0이면 큐에 추가
            q.append(i)

for i in result:
    print(i, end=' ')
```

위상 정렬의 답은 여러가지가 될 수 있다. 큐에 새로 들어가는 원소가 2개 이상인 경우 큐에 어느 쪽이라도 먼저 들어갈 수 있다.