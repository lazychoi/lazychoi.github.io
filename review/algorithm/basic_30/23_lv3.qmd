---
title: 모의고사
date: 2022/11/02
updated: last-modified
---

## 접근 과정

1. answer 크기 만큼 반복하며
1. 1번 학생은 1부터 5까지 차례로 응답 리스트에 입력 -> 5로 나눈 나머지를 응답에 입력하되 0일 경우는 5 입력
1. 2번 학생은 홀수번째는 2로 고정되고 나머지는 1, 3, 4, 5가 차례대로 응답 리스트에 입력
    1. [1, 3, 4, 5]를 리스트에 거꾸로 담아 [5, 4, 3, 1]
    1. 짝수일 때마다 pop()
    1. 리스트가 비면 다시 채운 후 pop()
1. 3번 학생은 3, 1, 2, 4, 5가 두개씩 차례대로 응답 리스트에 입력
    1. 정답 변수를 2로 나눈 횟수만큼 반복하며
    1. 응답 변수.extend() 함수 이용해 두 개씩 추가
    1. 최종 정답 변수 개수가 응답 변수보다 크면 응답[:-1]
1. 점수 = 정답과 응답을 비교하여 같은 개수만큼 점수 +1
1. 가장 높은 점수를 받은 사람들을 배열에 담기 -> 점수를 리스트로 묶고 최댓값과 같은 점수의 인덱스 + 1을 출력 변수에 넣기 

https://school.programmers.co.kr/learn/courses/30/lessons/42840

```{python}
answers = [1,2,3,4,5]

rng = len(answers)
student1 = [ 5 if i % 5 == 0 else i % 5 for i in range(1, rng + 1)]
student2 = []
student3 = []

# 스택 활용
num2 = [5, 4, 3, 1]
for i in range(1, rng + 1):
    if i % 2 == 1:
        student2.append(2)
    elif len(num2) == 0:
        num2 = [5, 4, 3, 1]
        student2.append(num2.pop())
    else: 
        student2.append(num2.pop())

num3 = [5, 4, 2, 1, 3]
for i in range(1, rng+1, 2):
    if len(num3) == 0:
        num3 = [5, 4, 2, 1, 3]
        tmp = num3.pop()
        student3.append(tmp)
        student3.append(tmp)
    else:
        tmp = num3.pop()
        student3.append(tmp)
        student3.append(tmp)

if len(student3) > rng:
    student3 = student3[:-1]

result1, result2, result3 = 0, 0, 0
for i in range(rng):
    if answers[i] == student1[i]:
        result1 += 1
    if answers[i] == student2[i]:
        result2 += 1
    if answers[i] == student3[i]:
        result3 += 1
# 최댓값과 같은 값이 있는지 확인
# 최댓값 인덱스
scores = [result1, result2, result3]
max_index = [i + 1 for i, v in enumerate(scores) if v == max(scores)]
max_index
```

## 다른 사람 풀이

1. 반복 패턴의 첫 패턴만 변수에 담는다.
1. enumerate() 함수로 인덱스와 값을 각각 변수에 담아 정답과 응답을 비교한다.
1. 패턴을 반복해서 입력하는 방법은 인덱스 번호를 패턴 크기로 나눈 나머지를 패턴 변수의 인덱스로 사용하는 것이다. 0 % 5 = 0, 1 $ 5 = 1, ...., 4 % 5 = 4, 5 % 5 = 0, ...
1. 점수 리스트도 enumerate() 함수를 이용해 값이 점수 리스트의 최댓값과 같으먼 인덱스를 최종 변수에 추가

```{python}
pattern1 = [1,2,3,4,5]
pattern2 = [2,1,2,3,2,4,2,5]
pattern3 = [3,3,1,1,2,2,4,4,5,5]
score = [0, 0, 0]
result = []

for idx, answer in enumerate(answers):
    if answer == pattern1[idx % len(pattern1)]:
        score[0] += 1
    if answer == pattern2[idx % len(pattern2)]:
        score[1] += 1
    if answer == pattern3[idx % len(pattern3)]:
        score[2] += 1

for idx, s in enumerate(score):
    if s == max(score):
        result.append(idx+1)

```

```{python}
0 % 5, 1 % 5, 2 % 5, 3 % 5, 4 % 5, 5 % 5, 6 % 5, 7 % 5
```
