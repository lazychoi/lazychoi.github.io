---
title: K 번째 수
date: 2022/10/31
updated: last-modified
---

## 접근 과정

[https://school.programmers.co.kr/learn/courses/30/lessons/42748](https://school.programmers.co.kr/learn/courses/30/lessons/42748)

기본 알고리즘. 인덱스가 1부터 시작한다는 것을 주의한다.

1. 슬라이싱으로 i부터 j까지 숫자를 별도의 리스트로 뽑아낸다.
2. 이 리스트를 정렬한다.
3. k-1 인덱스에 해당하는 값을 반환한다.

commands 변수가 2차원 리스트다. 2차원에 i, j, k 값이 담겨 있다. for문을 사용해 1차원을 벗겨내고 2차원 각 인덱스 값을 한 번에 변수에 담은다. 그러고 나서 위 번호대로 구현한다.

```{python}
array, commands = [1, 5, 2, 6, 3, 7, 4], [[2, 5, 3], [4, 4, 1], [1, 7, 3]]
answer = []
for item in commands:
    i, j, k = item[0]-1, item[1], item[2]-1
    temp = sorted(array[i:j])
    answer.append(temp[k])
answer
```

## 다른 사람 코드

인덱스를 지정하지 않아도 리스트 내 각 요소를 각각 변수로 받을 수 있다.

```{python}
commands = [[2, 5, 3], [4, 4, 1], [1, 7, 3]]
for item in commands:
    i, j, k = commands
print(i, j, k)
```

map과 lambda 함수를 이용해 한 줄로 구현한 코드다. map이 많이도 활용되는구나.

```{python}
array, commands = [1, 5, 2, 6, 3, 7, 4], [[2, 5, 3], [4, 4, 1], [1, 7, 3]]
list(map(lambda x:sorted(array[x[0]-1:x[1]])[x[2]-1], commands))
```